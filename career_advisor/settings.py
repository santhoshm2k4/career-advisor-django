# settings.py

"""
Django settings for career_advisor project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os # Need os module for os.path.join
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# It's recommended to load this from an environment variable in production
SECRET_KEY = 'django-insecure-^(2-@r$_uwhkkd%@6=zwcny)uvsa%&m)%0wh5z#%pktnp%-@!j' # Keep your original key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Set to False for production

# Update this list for production deployment
ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',      # Added for template filters like naturaltime
    'predictor',                    # Your main application
    # 'predictor.templatetags',       # Only include if you still have custom tags here
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware', # Handles sessions for login
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Associates users with requests
    'django.contrib.messages.middleware.MessageMiddleware',    # Handles flash messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'career_advisor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # --- MODIFIED: Added project-level templates directory ---
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True, # Still look for templates within apps
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # Important for request object in templates
                'django.contrib.auth.context_processors.auth',   # Important for user object in templates
                'django.contrib.messages.context_processors.messages', # Important for messages framework
            ],
        },
    },
]

WSGI_APPLICATION = 'career_advisor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC' # Change to your timezone if needed, e.g., 'Asia/Kolkata'
USE_I18N = True
USE_TZ = True # Recommended to keep True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
# Add this if you have project-wide static files outside apps (optional)
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# Define STATIC_ROOT for production 'collectstatic' command
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_collected')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- Authentication Settings ---

LOGIN_REDIRECT_URL = '/dashboard/' # Redirect to dashboard after successful login
LOGOUT_REDIRECT_URL = '/'          # Redirect to homepage after logout (will redirect to login)
LOGIN_URL = '/accounts/login/'     # The URL where the login view resides (default)


# --- Email Configuration ---

# Option 1: Console Backend (For development - prints emails to console)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Option 2: Gmail SMTP Backend (Requires App Password if using 2FA)
# -- Uncomment and fill the section below to use Gmail --
# -- Remember to comment out the Console Backend line above if you use this --

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'your_email' # !!! REPLACE !!!
EMAIL_HOST_PASSWORD = '16 character code' # !!! REPLACE !!!
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# Option 3: Other Backends (e.g., SendGrid, Mailgun - Check their docs)
# EMAIL_BACKEND = 'path.to.custom.Backend'
# ... other settings like API keys ...


# --- Messages Framework Storage (Optional, default usually fine) ---
# from django.contrib.messages import constants as message_constants
# MESSAGE_TAGS = {
#     message_constants.DEBUG: 'alert-secondary',
#     message_constants.INFO: 'alert-info',
#     message_constants.SUCCESS: 'alert-success',
#     message_constants.WARNING: 'alert-warning',
#     message_constants.ERROR: 'alert-danger',
# }
# MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'
